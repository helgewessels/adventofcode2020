package day20

import spock.lang.Specification
import spock.lang.Subject

class Day20Spec extends Specification {
    def input = new File(getClass().getResource('/input/day20.txt').toURI()).getText()

    @Subject
    Day20 day20 = new Day20()

    def part1() {
        expect:
        day20.part1(input) == 8425574315321
    }

    def part2() {
        expect:
        day20.part2(input) == 1841
    }

    def 'part 1 for 9 tiles'() {
        expect:
        day20.part1(smallInput) == 20899048083289
    }

    def 'part 2 for 9 tiles'() {
        expect:
        day20.part2(smallInput) == 273
    }

    def 'parse image tile'() {
        given:
        def input = '''
            Tile 2311:
            ..##.#..#.
            ##..#.....
            #...##..#.
            ####.#...#
            ##.##.###.
            ##...#.###
            .#.#.#..##
            ..#....#..
            ###...#.#.
            ..###..###
        '''

        when:
        def tiles = day20.parseTiles(input)

        then:
        tiles.first().id == 2311
        tiles.first().top == '..##.#..#.'
        tiles.first().bottom == '..###..###'
        tiles.first().left == '.#####..#.'
        tiles.first().right == '...#.##..#'
        tiles.first().image.rows.collect { it.join('') } == [
                '#..#....',
                '...##..#',
                '###.#...',
                '#.##.###',
                '#...#.##',
                '#.#.#..#',
                '.#....#.',
                '##...#.#'
        ]
    }

    def 'assemble image'() {
        given:
        def tiles = day20.parseTiles(smallInput)

        when:
        def image = day20.assembleImage(tiles)

        then:
        image.toString() == '''
            |.#.#..#.##...#.##..#####
            |###....#.#....#..#......
            |##.##.###.#.#..######...
            |###.#####...#.#####.#..#
            |##.#....#.##.####...#.##
            |...########.#....#####.#
            |....#..#...##..#.#.###..
            |.####...#..#.....#......
            |#..#.##..#..###.#.##....
            |#.####..#.####.#.#.###..
            |###.#.#...#.######.#..##
            |#.####....##..########.#
            |##..##.#...#...#.#.#.#..
            |...#..#..#.#.##..###.###
            |.#.#....#.##.#...###.##.
            |###.#...#..#.##.######..
            |.#.#.###.##.##.#..#.##..
            |.####.###.#...###.#..#.#
            |..#.#..#..#.#.#.####.###
            |#..####...#.#.#.###.###.
            |#####..#####...###....##
            |#.##..#..#...#..####...#
            |.#.###..##..##..####.##.
            |...###...##...#...#..###
        '''.strip().stripMargin()
    }

    def 'find and mark sea monsters'() {
        given:
        def image = image('''
            |.#.#..#.##...#.##..#####
            |###....#.#....#..#......
            |##.##.###.#.#..######...
            |###.#####...#.#####.#..#
            |##.#....#.##.####...#.##
            |...########.#....#####.#
            |....#..#...##..#.#.###..
            |.####...#..#.....#......
            |#..#.##..#..###.#.##....
            |#.####..#.####.#.#.###..
            |###.#.#...#.######.#..##
            |#.####....##..########.#
            |##..##.#...#...#.#.#.#..
            |...#..#..#.#.##..###.###
            |.#.#....#.##.#...###.##.
            |###.#...#..#.##.######..
            |.#.#.###.##.##.#..#.##..
            |.####.###.#...###.#..#.#
            |..#.#..#..#.#.#.####.###
            |#..####...#.#.#.###.###.
            |#####..#####...###....##
            |#.##..#..#...#..####...#
            |.#.###..##..##..####.##.
            |...###...##...#...#..###
        '''.strip().stripMargin())

        expect:
        day20.findAndMarkSeaMonsters(image).toString() == '''
            |.####...#####..#...###..
            |#####..#..#.#.####..#.#.
            |.#.#...#.###...#.##.O#..
            |#.O.##.OO#.#.OO.##.OOO##
            |..#O.#O#.O##O..O.#O##.##
            |...#.#..##.##...#..#..##
            |#.##.#..#.#..#..##.#.#..
            |.###.##.....#...###.#...
            |#.####.#.#....##.#..#.#.
            |##...#..#....#..#...####
            |..#.##...###..#.#####..#
            |....#.##.#.#####....#...
            |..##.##.###.....#.##..#.
            |#...#...###..####....##.
            |.#.##...#.##.#.#.###...#
            |#.###.#..####...##..#...
            |#.###...#.##...#.##O###.
            |.O##.#OO.###OO##..OOO##.
            |..O#.O..O..O.#O##O##.###
            |#.#..##.########..#..##.
            |#.#####..#.#...##..#....
            |#....##..#.#########..##
            |#...#.....#..##...###.##
            |#..###....##.#...##.##.#
        '''.strip().stripMargin()
    }

    def 'mark sea monsters'() {
        given:
        def image = image('''
            |.####...#####..#...###..
            |#####..#..#.#.####..#.#.
            |.#.#...#.###...#.##.##..
            |#.#.##.###.#.##.##.#####
            |..##.###.####..#.####.##
            |...#.#..##.##...#..#..##
            |#.##.#..#.#..#..##.#.#..
            |.###.##.....#...###.#...
            |#.####.#.#....##.#..#.#.
            |##...#..#....#..#...####
            |..#.##...###..#.#####..#
            |....#.##.#.#####....#...
            |..##.##.###.....#.##..#.
            |#...#...###..####....##.
            |.#.##...#.##.#.#.###...#
            |#.###.#..####...##..#...
            |#.###...#.##...#.######.
            |.###.###.#######..#####.
            |..##.#..#..#.#######.###
            |#.#..##.########..#..##.
            |#.#####..#.#...##..#....
            |#....##..#.#########..##
            |#...#.....#..##...###.##
            |#..###....##.#...##.##.#
        '''.strip().stripMargin())

        expect:
        day20.markSeaMonsters(image).toString() == '''
            |.####...#####..#...###..
            |#####..#..#.#.####..#.#.
            |.#.#...#.###...#.##.O#..
            |#.O.##.OO#.#.OO.##.OOO##
            |..#O.#O#.O##O..O.#O##.##
            |...#.#..##.##...#..#..##
            |#.##.#..#.#..#..##.#.#..
            |.###.##.....#...###.#...
            |#.####.#.#....##.#..#.#.
            |##...#..#....#..#...####
            |..#.##...###..#.#####..#
            |....#.##.#.#####....#...
            |..##.##.###.....#.##..#.
            |#...#...###..####....##.
            |.#.##...#.##.#.#.###...#
            |#.###.#..####...##..#...
            |#.###...#.##...#.##O###.
            |.O##.#OO.###OO##..OOO##.
            |..O#.O..O..O.#O##O##.###
            |#.#..##.########..#..##.
            |#.#####..#.#...##..#....
            |#....##..#.#########..##
            |#...#.....#..##...###.##
            |#..###....##.#...##.##.#
        '''.strip().stripMargin()
    }

    def 'match sea monster in rows slice'() {
        given:
        def image = image('''
            |.#...#.###...#.##.##
            |#.##.###.#.##.##.###
            |##.###.####..#.####.
        '''.strip().stripMargin())

        expect:
        SeaMonster.match(image.rows)
    }

    def 'mark sea monster in rows slice'() {
        given:
        def image = image('''
            |.#...#.###...#.##.##
            |#.##.###.#.##.##.###
            |##.###.####..#.####.
        '''.strip().stripMargin())

        when:
        def markedRows = SeaMonster.mark(image.rows, 0)

        then:
        new Image<>(markedRows).toString() == '''
            |.#...#.###...#.##.O#
            |O.##.OO#.#.OO.##.OOO
            |#O.#O#.O##O..O.#O##.
        '''.strip().stripMargin()
    }

    def 'Image.toString()'() {
        given:
        def image = new Image([
                [
                        new Tile(1, new Image([['.', '.'], ['#', '#']]), '', '', '', ''),
                        new Tile(2, new Image([['#', '#'], ['.', '.']]), '', '', '', ''),
                ],
                [
                        new Tile(3, new Image([['#', '.'], ['#', '#']]), '', '', '', ''),
                        new Tile(4, new Image([['.', '.'], ['#', '#']]), '', '', '', ''),
                ]
        ])

        expect:
        image.toString() == '''
            |..##
            |##..
            |#...
            |####
        '''.strip().stripMargin()
    }

    def 'rotate image tile'() {
        given:
        def input = '''
            Tile 2311:
            ..##.
            ##..#
            #...#
            ####.
            ##.##
        '''
        def tile = day20.parseTile(input)

        when:
        def rotatedTile = tile.rotate()

        then:
        rotatedTile.right == '..##.'
        rotatedTile.bottom == '#.##.'
        rotatedTile.left == '##.##'
        rotatedTile.top == '####.'
        rotatedTile.image.rows.collect { it.join('') } == [
                '#.#',
                '#..',
                '#..'
        ]
    }

    def 'expand image tile to rotated and flipped'() {
        given:
        def input = '''
            Tile 2311:
            ..##.#..#.
            ##..#.....
            #...##..#.
            ####.#...#
            ##.##.###.
            ##...#.###
            .#.#.#..##
            ..#....#..
            ###...#.#.
            ..###..###
        '''
        def tile = day20.parseTile(input)

        when:
        def expandedTiles = tile.expand()

        then:
        expandedTiles.size() == 8
    }

    private static image(String input) {
        new Image(input.split('\n').collect { it.toCharArray().toList() })
    }

    def smallInput = '''
        Tile 2311:
        ..##.#..#.
        ##..#.....
        #...##..#.
        ####.#...#
        ##.##.###.
        ##...#.###
        .#.#.#..##
        ..#....#..
        ###...#.#.
        ..###..###
        
        Tile 1951:
        #.##...##.
        #.####...#
        .....#..##
        #...######
        .##.#....#
        .###.#####
        ###.##.##.
        .###....#.
        ..#.#..#.#
        #...##.#..
        
        Tile 1171:
        ####...##.
        #..##.#..#
        ##.#..#.#.
        .###.####.
        ..###.####
        .##....##.
        .#...####.
        #.##.####.
        ####..#...
        .....##...
        
        Tile 1427:
        ###.##.#..
        .#..#.##..
        .#.##.#..#
        #.#.#.##.#
        ....#...##
        ...##..##.
        ...#.#####
        .#.####.#.
        ..#..###.#
        ..##.#..#.
        
        Tile 1489:
        ##.#.#....
        ..##...#..
        .##..##...
        ..#...#...
        #####...#.
        #..#.#.#.#
        ...#.#.#..
        ##.#...##.
        ..##.##.##
        ###.##.#..
        
        Tile 2473:
        #....####.
        #..#.##...
        #.##..#...
        ######.#.#
        .#...#.#.#
        .#########
        .###.#..#.
        ########.#
        ##...##.#.
        ..###.#.#.
        
        Tile 2971:
        ..#.#....#
        #...###...
        #.#.###...
        ##.##..#..
        .#####..##
        .#..####.#
        #..#.#..#.
        ..####.###
        ..#.#.###.
        ...#.#.#.#
        
        Tile 2729:
        ...#.#.#.#
        ####.#....
        ..#.#.....
        ....#..#.#
        .##..##.#.
        .#.####...
        ####.#.#..
        ##.####...
        ##..#.##..
        #.##...##.
        
        Tile 3079:
        #.#.#####.
        .#..######
        ..#.......
        ######....
        ####.#..#.
        .#...#.##.
        #.#####.##
        ..#.###...
        ..#.......
        ..#.###...
    '''
}
